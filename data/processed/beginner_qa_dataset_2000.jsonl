{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What causes IndexError in a list?", "answer": "You're trying to access an index that doesn't exist. Example:\n\n```python\nmy_list = [1, 2, 3]\nprint(my_list[3])  # Raises IndexError\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does int(\"abc\") give a ValueError?", "answer": "You can't convert non-numeric strings to integers. Try using a numeric string like:\n\n```python\nint(\"123\")  # This works\nint(\"abc\")  # Raises ValueError\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "How do I return a value from a Python function?", "answer": "Use the return statement:\n\n```python\ndef square(x):\n    return x * x\nprint(square(3))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I correctly use the print() function in Python 3?", "answer": "In Python 3, print is a function and requires parentheses:\n\n```python\nprint(\"Hello World\")\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I define and call a function in Python?", "answer": "Use def to define and then call by name:\n\n```python\ndef greet():\n    print(\"Hello\")\n\ngreet()\n```"}
{"question": "What does a NameError mean in Python?", "answer": "It means you're using a variable before defining it. Example:\n\n```python\nprint(x)\n```\nIf x was not defined earlier, you'll get a NameError."}
{"question": "How can I read a file line by line in Python?", "answer": "Use the open() function and a loop:\n\n```python\nwith open('file.txt', 'r') as f:\n    for line in f:\n        print(line)\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "What causes an IndentationError in a simple if-else block?", "answer": "IndentationError happens when the lines inside the if or else block are not properly indented. Use consistent spaces or tabs. Example:\n\n```python\nif x > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "How do I insert a variable into a string?", "answer": "Use f-strings or format():\n\n```python\nname = \"Alice\"\nprint(f\"Hello, {name}\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why is input() returning a string even when I enter a number?", "answer": "The input() function always returns a string. Convert it to int or float if needed:\n\n```python\nnum = int(input(\"Enter a number: \"))\n```"}
{"question": "How do I find the number of items in a list?", "answer": "Use the len() function:\n\n```python\nmy_list = [1, 2, 3]\nprint(len(my_list))  # Output: 3\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my for loop miss the last number when using range()?", "answer": "Python's range() is exclusive of the end value. Example:\n\n```python\nfor i in range(5):  # goes from 0 to 4\n    print(i)\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "What does KeyError mean in Python dictionaries?", "answer": "It means the key you're accessing doesn't exist. Use .get() or check the key first:\n\n```python\nd = {\"a\": 1}\nprint(d.get(\"b\", 0))  # returns 0 instead of error\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
{"question": "Why can I change a list but not a string?", "answer": "Lists are mutable; strings are not. Example:\n\n```python\ns = \"hello\"\ns[0] = \"H\"  # Error\nl = [1, 2]\nl[0] = 3  # Works\n```"}
{"question": "What does range(5) do in a for loop?", "answer": "It creates a sequence from 0 to 4. Example:\n\n```python\nfor i in range(5):\n    print(i)\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a SyntaxError when I write 'if x == 5 print(\"Yes\")'?", "answer": "You're missing a colon at the end of the if statement. It should be:\n\n```python\nif x == 5:\n    print(\"Yes\")\n```"}
{"question": "Why do I get TypeError when I do 'age = \"25\" + 5'?", "answer": "You're trying to add a string and an integer, which is not allowed. Convert the string to an integer first:\n\n```python\nage = int(\"25\") + 5\n```"}
{"question": "Why doesn't my if condition work as expected?", "answer": "Check the boolean logic. Use proper comparison operators:\n\n```python\nif x == 5:\n    print(\"x is 5\")\n```"}
{"question": "Why do I get a ZeroDivisionError?", "answer": "You're dividing a number by zero, which is not allowed:\n\n```python\nx = 10 / 0  # Raises ZeroDivisionError\n```"}
{"question": "Why does my list not grow when I assign instead of append?", "answer": "Use append() to add elements:\n\n```python\nmy_list = []\nmy_list.append(1)\n```"}
